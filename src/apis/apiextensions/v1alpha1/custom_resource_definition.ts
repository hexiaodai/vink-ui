// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "apiextensions/v1alpha1/custom_resource_definition.proto" (package "vink.kubevm.io.apis.apiextensions.v1alpha1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ObjectMeta } from "../../types/object_meta";
/**
 * CustomResourceDefinition message of CustomResource definition
 *
 * @generated from protobuf message vink.kubevm.io.apis.apiextensions.v1alpha1.CustomResourceDefinition
 */
export interface CustomResourceDefinition {
    /**
     * Metadata is that all persisted resources must have, which includes all
     * objects
     *
     * @generated from protobuf field: vink.kubevm.io.apis.types.ObjectMeta metadata = 1;
     */
    metadata?: ObjectMeta;
    /**
     * Spec is the desired behavior of the CustomResource.
     *
     * @generated from protobuf field: string spec = 2;
     */
    spec: string;
    /**
     * status is the status information of the CustomResource.
     *
     * @generated from protobuf field: string status = 3;
     */
    status: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class CustomResourceDefinition$Type extends MessageType<CustomResourceDefinition> {
    constructor() {
        super("vink.kubevm.io.apis.apiextensions.v1alpha1.CustomResourceDefinition", [
            { no: 1, name: "metadata", kind: "message", T: () => ObjectMeta },
            { no: 2, name: "spec", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "status", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CustomResourceDefinition>): CustomResourceDefinition {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.spec = "";
        message.status = "";
        if (value !== undefined)
            reflectionMergePartial<CustomResourceDefinition>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomResourceDefinition): CustomResourceDefinition {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* vink.kubevm.io.apis.types.ObjectMeta metadata */ 1:
                    message.metadata = ObjectMeta.internalBinaryRead(reader, reader.uint32(), options, message.metadata);
                    break;
                case /* string spec */ 2:
                    message.spec = reader.string();
                    break;
                case /* string status */ 3:
                    message.status = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomResourceDefinition, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* vink.kubevm.io.apis.types.ObjectMeta metadata = 1; */
        if (message.metadata)
            ObjectMeta.internalBinaryWrite(message.metadata, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string spec = 2; */
        if (message.spec !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.spec);
        /* string status = 3; */
        if (message.status !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.apiextensions.v1alpha1.CustomResourceDefinition
 */
export const CustomResourceDefinition = new CustomResourceDefinition$Type();
