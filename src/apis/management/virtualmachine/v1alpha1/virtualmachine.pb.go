// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: management/virtualmachine/v1alpha1/virtualmachine.proto

package v1alpha1

import (
	_ "github.com/kubevm.io/vink/apis/apiextensions/v1alpha1"
	types "github.com/kubevm.io/vink/apis/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtualMachinePowerStateRequest_PowerState int32

const (
	VirtualMachinePowerStateRequest_UNSPECIFIED  VirtualMachinePowerStateRequest_PowerState = 0
	VirtualMachinePowerStateRequest_ON           VirtualMachinePowerStateRequest_PowerState = 1
	VirtualMachinePowerStateRequest_OFF          VirtualMachinePowerStateRequest_PowerState = 2
	VirtualMachinePowerStateRequest_REBOOT       VirtualMachinePowerStateRequest_PowerState = 3
	VirtualMachinePowerStateRequest_FORCE_OFF    VirtualMachinePowerStateRequest_PowerState = 4
	VirtualMachinePowerStateRequest_FORCE_REBOOT VirtualMachinePowerStateRequest_PowerState = 5
)

// Enum value maps for VirtualMachinePowerStateRequest_PowerState.
var (
	VirtualMachinePowerStateRequest_PowerState_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ON",
		2: "OFF",
		3: "REBOOT",
		4: "FORCE_OFF",
		5: "FORCE_REBOOT",
	}
	VirtualMachinePowerStateRequest_PowerState_value = map[string]int32{
		"UNSPECIFIED":  0,
		"ON":           1,
		"OFF":          2,
		"REBOOT":       3,
		"FORCE_OFF":    4,
		"FORCE_REBOOT": 5,
	}
)

func (x VirtualMachinePowerStateRequest_PowerState) Enum() *VirtualMachinePowerStateRequest_PowerState {
	p := new(VirtualMachinePowerStateRequest_PowerState)
	*p = x
	return p
}

func (x VirtualMachinePowerStateRequest_PowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachinePowerStateRequest_PowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_management_virtualmachine_v1alpha1_virtualmachine_proto_enumTypes[0].Descriptor()
}

func (VirtualMachinePowerStateRequest_PowerState) Type() protoreflect.EnumType {
	return &file_management_virtualmachine_v1alpha1_virtualmachine_proto_enumTypes[0]
}

func (x VirtualMachinePowerStateRequest_PowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VirtualMachinePowerStateRequest_PowerState.Descriptor instead.
func (VirtualMachinePowerStateRequest_PowerState) EnumDescriptor() ([]byte, []int) {
	return file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescGZIP(), []int{0, 0}
}

type VirtualMachinePowerStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceName *types.NamespaceName                       `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	PowerState    VirtualMachinePowerStateRequest_PowerState `protobuf:"varint,2,opt,name=power_state,json=powerState,proto3,enum=vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest_PowerState" json:"power_state,omitempty"`
}

func (x *VirtualMachinePowerStateRequest) Reset() {
	*x = VirtualMachinePowerStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_management_virtualmachine_v1alpha1_virtualmachine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachinePowerStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachinePowerStateRequest) ProtoMessage() {}

func (x *VirtualMachinePowerStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_virtualmachine_v1alpha1_virtualmachine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachinePowerStateRequest.ProtoReflect.Descriptor instead.
func (*VirtualMachinePowerStateRequest) Descriptor() ([]byte, []int) {
	return file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescGZIP(), []int{0}
}

func (x *VirtualMachinePowerStateRequest) GetNamespaceName() *types.NamespaceName {
	if x != nil {
		return x.NamespaceName
	}
	return nil
}

func (x *VirtualMachinePowerStateRequest) GetPowerState() VirtualMachinePowerStateRequest_PowerState {
	if x != nil {
		return x.PowerState
	}
	return VirtualMachinePowerStateRequest_UNSPECIFIED
}

var File_management_virtualmachine_v1alpha1_virtualmachine_proto protoreflect.FileDescriptor

var file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDesc = []byte{
	0x0a, 0x37, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x76, 0x69, 0x6e, 0x6b, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x76, 0x6d, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x37, 0x61, 0x70, 0x69, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x02, 0x0a, 0x1f, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f,
	0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x69, 0x6e, 0x6b, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x76, 0x6d, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x83, 0x01, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x62, 0x2e, 0x76, 0x69, 0x6e, 0x6b, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x76, 0x6d, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5b, 0x0a, 0x0a, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x4f, 0x46, 0x46, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10,
	0x03, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54,
	0x10, 0x05, 0x32, 0xa8, 0x01, 0x0a, 0x18, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x8b, 0x01, 0x0a, 0x18, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x57, 0x2e, 0x76,
	0x69, 0x6e, 0x6b, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x76, 0x6d, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x43, 0x5a,
	0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75, 0x62, 0x65,
	0x76, 0x6d, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x69, 0x6e, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescOnce sync.Once
	file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescData = file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDesc
)

func file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescGZIP() []byte {
	file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescOnce.Do(func() {
		file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescData = protoimpl.X.CompressGZIP(file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescData)
	})
	return file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDescData
}

var file_management_virtualmachine_v1alpha1_virtualmachine_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_management_virtualmachine_v1alpha1_virtualmachine_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_management_virtualmachine_v1alpha1_virtualmachine_proto_goTypes = []interface{}{
	(VirtualMachinePowerStateRequest_PowerState)(0), // 0: vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.PowerState
	(*VirtualMachinePowerStateRequest)(nil),         // 1: vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest
	(*types.NamespaceName)(nil),                     // 2: vink.kubevm.io.apis.types.NamespaceName
	(*emptypb.Empty)(nil),                           // 3: google.protobuf.Empty
}
var file_management_virtualmachine_v1alpha1_virtualmachine_proto_depIdxs = []int32{
	2, // 0: vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.namespace_name:type_name -> vink.kubevm.io.apis.types.NamespaceName
	0, // 1: vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.power_state:type_name -> vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.PowerState
	1, // 2: vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachineManagement.VirtualMachinePowerState:input_type -> vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest
	3, // 3: vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachineManagement.VirtualMachinePowerState:output_type -> google.protobuf.Empty
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_management_virtualmachine_v1alpha1_virtualmachine_proto_init() }
func file_management_virtualmachine_v1alpha1_virtualmachine_proto_init() {
	if File_management_virtualmachine_v1alpha1_virtualmachine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_management_virtualmachine_v1alpha1_virtualmachine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachinePowerStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_management_virtualmachine_v1alpha1_virtualmachine_proto_goTypes,
		DependencyIndexes: file_management_virtualmachine_v1alpha1_virtualmachine_proto_depIdxs,
		EnumInfos:         file_management_virtualmachine_v1alpha1_virtualmachine_proto_enumTypes,
		MessageInfos:      file_management_virtualmachine_v1alpha1_virtualmachine_proto_msgTypes,
	}.Build()
	File_management_virtualmachine_v1alpha1_virtualmachine_proto = out.File
	file_management_virtualmachine_v1alpha1_virtualmachine_proto_rawDesc = nil
	file_management_virtualmachine_v1alpha1_virtualmachine_proto_goTypes = nil
	file_management_virtualmachine_v1alpha1_virtualmachine_proto_depIdxs = nil
}
