// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "management/virtualmachine/v1alpha1/virtualmachine.proto" (package "vink.kubevm.io.apis.management.virtualmachine.v1alpha1", syntax proto3)
// tslint:disable
import { Empty } from "../../../google/protobuf/empty";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { NamespaceName } from "../../../types/namespace_name";
/**
 * @generated from protobuf message vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest
 */
export interface VirtualMachinePowerStateRequest {
    /**
     * @generated from protobuf field: vink.kubevm.io.apis.types.NamespaceName namespace_name = 1;
     */
    namespaceName?: NamespaceName;
    /**
     * @generated from protobuf field: vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.PowerState power_state = 2;
     */
    powerState: VirtualMachinePowerStateRequest_PowerState;
}
/**
 * @generated from protobuf enum vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.PowerState
 */
export enum VirtualMachinePowerStateRequest_PowerState {
    /**
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: ON = 1;
     */
    ON = 1,
    /**
     * @generated from protobuf enum value: OFF = 2;
     */
    OFF = 2,
    /**
     * @generated from protobuf enum value: REBOOT = 3;
     */
    REBOOT = 3,
    /**
     * @generated from protobuf enum value: FORCE_OFF = 4;
     */
    FORCE_OFF = 4,
    /**
     * @generated from protobuf enum value: FORCE_REBOOT = 5;
     */
    FORCE_REBOOT = 5
}
// @generated message type with reflection information, may provide speed optimized methods
class VirtualMachinePowerStateRequest$Type extends MessageType<VirtualMachinePowerStateRequest> {
    constructor() {
        super("vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest", [
            { no: 1, name: "namespace_name", kind: "message", T: () => NamespaceName },
            { no: 2, name: "power_state", kind: "enum", T: () => ["vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.PowerState", VirtualMachinePowerStateRequest_PowerState] }
        ]);
    }
    create(value?: PartialMessage<VirtualMachinePowerStateRequest>): VirtualMachinePowerStateRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.powerState = 0;
        if (value !== undefined)
            reflectionMergePartial<VirtualMachinePowerStateRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VirtualMachinePowerStateRequest): VirtualMachinePowerStateRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* vink.kubevm.io.apis.types.NamespaceName namespace_name */ 1:
                    message.namespaceName = NamespaceName.internalBinaryRead(reader, reader.uint32(), options, message.namespaceName);
                    break;
                case /* vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.PowerState power_state */ 2:
                    message.powerState = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VirtualMachinePowerStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* vink.kubevm.io.apis.types.NamespaceName namespace_name = 1; */
        if (message.namespaceName)
            NamespaceName.internalBinaryWrite(message.namespaceName, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest.PowerState power_state = 2; */
        if (message.powerState !== 0)
            writer.tag(2, WireType.Varint).int32(message.powerState);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachinePowerStateRequest
 */
export const VirtualMachinePowerStateRequest = new VirtualMachinePowerStateRequest$Type();
/**
 * @generated ServiceType for protobuf service vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachineManagement
 */
export const VirtualMachineManagement = new ServiceType("vink.kubevm.io.apis.management.virtualmachine.v1alpha1.VirtualMachineManagement", [
    { name: "VirtualMachinePowerState", options: {}, I: VirtualMachinePowerStateRequest, O: Empty }
]);
