// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "management/resource/v1alpha1/listwatch.proto" (package "vink.kubevm.io.apis.management.resource.v1alpha1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ResourceListWatchManagement } from "./listwatch";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListWatchResponse } from "./listwatch";
import type { ListWatchRequest } from "./listwatch";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service vink.kubevm.io.apis.management.resource.v1alpha1.ResourceListWatchManagement
 */
export interface IResourceListWatchManagementClient {
    /**
     * @generated from protobuf rpc: ListWatch(vink.kubevm.io.apis.management.resource.v1alpha1.ListWatchRequest) returns (stream vink.kubevm.io.apis.management.resource.v1alpha1.ListWatchResponse);
     */
    listWatch(input: ListWatchRequest, options?: RpcOptions): ServerStreamingCall<ListWatchRequest, ListWatchResponse>;
}
/**
 * @generated from protobuf service vink.kubevm.io.apis.management.resource.v1alpha1.ResourceListWatchManagement
 */
export class ResourceListWatchManagementClient implements IResourceListWatchManagementClient, ServiceInfo {
    typeName = ResourceListWatchManagement.typeName;
    methods = ResourceListWatchManagement.methods;
    options = ResourceListWatchManagement.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ListWatch(vink.kubevm.io.apis.management.resource.v1alpha1.ListWatchRequest) returns (stream vink.kubevm.io.apis.management.resource.v1alpha1.ListWatchResponse);
     */
    listWatch(input: ListWatchRequest, options?: RpcOptions): ServerStreamingCall<ListWatchRequest, ListWatchResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListWatchRequest, ListWatchResponse>("serverStreaming", this._transport, method, opt, input);
    }
}
