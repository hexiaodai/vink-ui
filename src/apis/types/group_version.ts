// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "types/group_version.proto" (package "vink.kubevm.io.apis.types", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion
 * to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling
 *
 * @generated from protobuf message vink.kubevm.io.apis.types.GroupVersionResource
 */
export interface GroupVersionResource {
    /**
     * @generated from protobuf field: string group = 1;
     */
    group: string;
    /**
     * @generated from protobuf field: string version = 2;
     */
    version: string;
    /**
     * @generated from protobuf field: string resource = 3;
     */
    resource: string;
}
/**
 * GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion
 * to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling
 *
 * @generated from protobuf message vink.kubevm.io.apis.types.GroupVersionKind
 */
export interface GroupVersionKind {
    /**
     * @generated from protobuf field: string group = 1;
     */
    group: string;
    /**
     * @generated from protobuf field: string version = 2;
     */
    version: string;
    /**
     * @generated from protobuf field: string kind = 3;
     */
    kind: string;
}
/**
 * @generated from protobuf message vink.kubevm.io.apis.types.GroupVersionResourceIdentifier
 */
export interface GroupVersionResourceIdentifier {
    /**
     * @generated from protobuf oneof: option
     */
    option: {
        oneofKind: "enum";
        /**
         * @generated from protobuf field: vink.kubevm.io.apis.types.GroupVersionResourceEnum enum = 1;
         */
        enum: GroupVersionResourceEnum;
    } | {
        oneofKind: "custom";
        /**
         * @generated from protobuf field: vink.kubevm.io.apis.types.GroupVersionResource custom = 2;
         */
        custom: GroupVersionResource;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf enum vink.kubevm.io.apis.types.GroupVersionResourceEnum
 */
export enum GroupVersionResourceEnum {
    /**
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: VIRTUAL_MACHINE = 1;
     */
    VIRTUAL_MACHINE = 1,
    /**
     * @generated from protobuf enum value: VIRTUAL_MACHINE_INSTANCE = 2;
     */
    VIRTUAL_MACHINE_INSTANCE = 2,
    /**
     * @generated from protobuf enum value: DATA_VOLUME = 3;
     */
    DATA_VOLUME = 3,
    /**
     * @generated from protobuf enum value: NODE = 4;
     */
    NODE = 4,
    /**
     * @generated from protobuf enum value: NAMESPACE = 5;
     */
    NAMESPACE = 5
}
// @generated message type with reflection information, may provide speed optimized methods
class GroupVersionResource$Type extends MessageType<GroupVersionResource> {
    constructor() {
        super("vink.kubevm.io.apis.types.GroupVersionResource", [
            { no: 1, name: "group", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "resource", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GroupVersionResource>): GroupVersionResource {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.group = "";
        message.version = "";
        message.resource = "";
        if (value !== undefined)
            reflectionMergePartial<GroupVersionResource>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GroupVersionResource): GroupVersionResource {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string group */ 1:
                    message.group = reader.string();
                    break;
                case /* string version */ 2:
                    message.version = reader.string();
                    break;
                case /* string resource */ 3:
                    message.resource = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GroupVersionResource, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string group = 1; */
        if (message.group !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.group);
        /* string version = 2; */
        if (message.version !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.version);
        /* string resource = 3; */
        if (message.resource !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.resource);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.types.GroupVersionResource
 */
export const GroupVersionResource = new GroupVersionResource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GroupVersionKind$Type extends MessageType<GroupVersionKind> {
    constructor() {
        super("vink.kubevm.io.apis.types.GroupVersionKind", [
            { no: 1, name: "group", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "version", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "kind", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GroupVersionKind>): GroupVersionKind {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.group = "";
        message.version = "";
        message.kind = "";
        if (value !== undefined)
            reflectionMergePartial<GroupVersionKind>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GroupVersionKind): GroupVersionKind {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string group */ 1:
                    message.group = reader.string();
                    break;
                case /* string version */ 2:
                    message.version = reader.string();
                    break;
                case /* string kind */ 3:
                    message.kind = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GroupVersionKind, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string group = 1; */
        if (message.group !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.group);
        /* string version = 2; */
        if (message.version !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.version);
        /* string kind = 3; */
        if (message.kind !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.kind);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.types.GroupVersionKind
 */
export const GroupVersionKind = new GroupVersionKind$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GroupVersionResourceIdentifier$Type extends MessageType<GroupVersionResourceIdentifier> {
    constructor() {
        super("vink.kubevm.io.apis.types.GroupVersionResourceIdentifier", [
            { no: 1, name: "enum", kind: "enum", oneof: "option", T: () => ["vink.kubevm.io.apis.types.GroupVersionResourceEnum", GroupVersionResourceEnum] },
            { no: 2, name: "custom", kind: "message", oneof: "option", T: () => GroupVersionResource }
        ]);
    }
    create(value?: PartialMessage<GroupVersionResourceIdentifier>): GroupVersionResourceIdentifier {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.option = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<GroupVersionResourceIdentifier>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GroupVersionResourceIdentifier): GroupVersionResourceIdentifier {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* vink.kubevm.io.apis.types.GroupVersionResourceEnum enum */ 1:
                    message.option = {
                        oneofKind: "enum",
                        enum: reader.int32()
                    };
                    break;
                case /* vink.kubevm.io.apis.types.GroupVersionResource custom */ 2:
                    message.option = {
                        oneofKind: "custom",
                        custom: GroupVersionResource.internalBinaryRead(reader, reader.uint32(), options, (message.option as any).custom)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GroupVersionResourceIdentifier, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* vink.kubevm.io.apis.types.GroupVersionResourceEnum enum = 1; */
        if (message.option.oneofKind === "enum")
            writer.tag(1, WireType.Varint).int32(message.option.enum);
        /* vink.kubevm.io.apis.types.GroupVersionResource custom = 2; */
        if (message.option.oneofKind === "custom")
            GroupVersionResource.internalBinaryWrite(message.option.custom, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.types.GroupVersionResourceIdentifier
 */
export const GroupVersionResourceIdentifier = new GroupVersionResourceIdentifier$Type();
