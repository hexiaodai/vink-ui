{
  "swagger": "2.0",
  "info": {
    "title": "management/resource/v1alpha1/listwatch.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ResourceListWatchManagement"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesCustomSelector": {
      "type": "object",
      "properties": {
        "namespaceNames": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesNamespaceName"
          }
        },
        "fieldSelector": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "typesGroupVersionResource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        }
      },
      "title": "GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion\nto avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling"
    },
    "typesGroupVersionResourceEnum": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "VIRTUAL_MACHINE",
        "VIRTUAL_MACHINE_INSTANCE",
        "DATA_VOLUME",
        "NODE",
        "NAMESPACE",
        "MULTUS",
        "SUBNET",
        "VPC",
        "IPPOOL",
        "STORAGE_CLASS",
        "IPS",
        "VIRTUAL_MACHINE_INSTANCE_SUMMARY"
      ],
      "default": "UNSPECIFIED"
    },
    "typesGroupVersionResourceIdentifier": {
      "type": "object",
      "properties": {
        "enum": {
          "$ref": "#/definitions/typesGroupVersionResourceEnum"
        },
        "custom": {
          "$ref": "#/definitions/typesGroupVersionResource"
        }
      }
    },
    "typesListOptions": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "type": "string"
        },
        "fieldSelector": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "continue": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "title": "repeated NamespaceName namespace_names = 5;\nrepeated string custom_field_selector = 6;"
        },
        "watch": {
          "type": "boolean"
        },
        "customSelector": {
          "$ref": "#/definitions/typesCustomSelector"
        }
      }
    },
    "typesNamespaceName": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "typesObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty\nnamespace is equivalent to the \"default\" namespace, but \"default\" is the\ncanonical representation. Not all objects are required to be scoped to a\nnamespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "CreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "int64",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesOwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller. +optional +patchMergeKey=uid"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes\nall objects users must create."
    },
    "typesOwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field."
    },
    "v1alpha1CustomResourceDefinition": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/typesObjectMeta",
          "title": "Metadata is that all persisted resources must have, which includes all\nobjects"
        },
        "spec": {
          "type": "string",
          "description": "Spec is the desired behavior of the CustomResource."
        },
        "status": {
          "type": "string",
          "description": "status is the status information of the CustomResource."
        }
      },
      "title": "CustomResourceDefinition message of CustomResource definition"
    },
    "v1alpha1EventType": {
      "type": "string",
      "enum": [
        "ADDED",
        "MODIFIED",
        "DELETED"
      ],
      "default": "ADDED"
    },
    "v1alpha1ListWatchResponse": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/v1alpha1EventType"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CustomResourceDefinition"
          }
        },
        "deleted": {
          "$ref": "#/definitions/typesNamespaceName"
        },
        "options": {
          "$ref": "#/definitions/typesListOptions"
        }
      }
    }
  }
}
