// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "management/resource/v1alpha1/watch.proto" (package "vink.kubevm.io.apis.management.resource.v1alpha1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ResourceWatchManagement } from "./watch";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { WatchResponse } from "./watch";
import type { WatchRequest } from "./watch";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service vink.kubevm.io.apis.management.resource.v1alpha1.ResourceWatchManagement
 */
export interface IResourceWatchManagementClient {
    /**
     * @generated from protobuf rpc: Watch(vink.kubevm.io.apis.management.resource.v1alpha1.WatchRequest) returns (stream vink.kubevm.io.apis.management.resource.v1alpha1.WatchResponse);
     */
    watch(input: WatchRequest, options?: RpcOptions): ServerStreamingCall<WatchRequest, WatchResponse>;
}
/**
 * @generated from protobuf service vink.kubevm.io.apis.management.resource.v1alpha1.ResourceWatchManagement
 */
export class ResourceWatchManagementClient implements IResourceWatchManagementClient, ServiceInfo {
    typeName = ResourceWatchManagement.typeName;
    methods = ResourceWatchManagement.methods;
    options = ResourceWatchManagement.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Watch(vink.kubevm.io.apis.management.resource.v1alpha1.WatchRequest) returns (stream vink.kubevm.io.apis.management.resource.v1alpha1.WatchResponse);
     */
    watch(input: WatchRequest, options?: RpcOptions): ServerStreamingCall<WatchRequest, WatchResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<WatchRequest, WatchResponse>("serverStreaming", this._transport, method, opt, input);
    }
}
