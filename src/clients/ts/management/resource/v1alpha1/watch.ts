// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "management/resource/v1alpha1/watch.proto" (package "vink.kubevm.io.apis.management.resource.v1alpha1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { FieldSelectorGroup } from "../../../types/types";
import { ResourceType } from "../../../types/types";
/**
 * @generated from protobuf message vink.kubevm.io.apis.management.resource.v1alpha1.WatchRequest
 */
export interface WatchRequest {
    /**
     * @generated from protobuf field: vink.kubevm.io.apis.types.ResourceType resource_type = 1;
     */
    resourceType: ResourceType;
    /**
     * @generated from protobuf field: vink.kubevm.io.apis.management.resource.v1alpha1.WatchOptions options = 2;
     */
    options?: WatchOptions;
}
/**
 * @generated from protobuf message vink.kubevm.io.apis.management.resource.v1alpha1.WatchResponse
 */
export interface WatchResponse {
    /**
     * @generated from protobuf field: vink.kubevm.io.apis.management.resource.v1alpha1.EventType event_type = 1;
     */
    eventType: EventType;
    /**
     * @generated from protobuf field: repeated string items = 2;
     */
    items: string[];
}
/**
 * @generated from protobuf message vink.kubevm.io.apis.management.resource.v1alpha1.WatchOptions
 */
export interface WatchOptions {
    /**
     * @generated from protobuf field: vink.kubevm.io.apis.types.FieldSelectorGroup field_selector_group = 1;
     */
    fieldSelectorGroup?: FieldSelectorGroup; // repeated string field_selector = 1;
}
/**
 * @generated from protobuf enum vink.kubevm.io.apis.management.resource.v1alpha1.EventType
 */
export enum EventType {
    /**
     * @generated from protobuf enum value: ADDED = 0;
     */
    ADDED = 0,
    /**
     * @generated from protobuf enum value: MODIFIED = 1;
     */
    MODIFIED = 1,
    /**
     * @generated from protobuf enum value: DELETED = 2;
     */
    DELETED = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class WatchRequest$Type extends MessageType<WatchRequest> {
    constructor() {
        super("vink.kubevm.io.apis.management.resource.v1alpha1.WatchRequest", [
            { no: 1, name: "resource_type", kind: "enum", T: () => ["vink.kubevm.io.apis.types.ResourceType", ResourceType] },
            { no: 2, name: "options", kind: "message", T: () => WatchOptions }
        ]);
    }
    create(value?: PartialMessage<WatchRequest>): WatchRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.resourceType = 0;
        if (value !== undefined)
            reflectionMergePartial<WatchRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WatchRequest): WatchRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* vink.kubevm.io.apis.types.ResourceType resource_type */ 1:
                    message.resourceType = reader.int32();
                    break;
                case /* vink.kubevm.io.apis.management.resource.v1alpha1.WatchOptions options */ 2:
                    message.options = WatchOptions.internalBinaryRead(reader, reader.uint32(), options, message.options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WatchRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* vink.kubevm.io.apis.types.ResourceType resource_type = 1; */
        if (message.resourceType !== 0)
            writer.tag(1, WireType.Varint).int32(message.resourceType);
        /* vink.kubevm.io.apis.management.resource.v1alpha1.WatchOptions options = 2; */
        if (message.options)
            WatchOptions.internalBinaryWrite(message.options, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.management.resource.v1alpha1.WatchRequest
 */
export const WatchRequest = new WatchRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatchResponse$Type extends MessageType<WatchResponse> {
    constructor() {
        super("vink.kubevm.io.apis.management.resource.v1alpha1.WatchResponse", [
            { no: 1, name: "event_type", kind: "enum", T: () => ["vink.kubevm.io.apis.management.resource.v1alpha1.EventType", EventType] },
            { no: 2, name: "items", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<WatchResponse>): WatchResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.eventType = 0;
        message.items = [];
        if (value !== undefined)
            reflectionMergePartial<WatchResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WatchResponse): WatchResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* vink.kubevm.io.apis.management.resource.v1alpha1.EventType event_type */ 1:
                    message.eventType = reader.int32();
                    break;
                case /* repeated string items */ 2:
                    message.items.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WatchResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* vink.kubevm.io.apis.management.resource.v1alpha1.EventType event_type = 1; */
        if (message.eventType !== 0)
            writer.tag(1, WireType.Varint).int32(message.eventType);
        /* repeated string items = 2; */
        for (let i = 0; i < message.items.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.items[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.management.resource.v1alpha1.WatchResponse
 */
export const WatchResponse = new WatchResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatchOptions$Type extends MessageType<WatchOptions> {
    constructor() {
        super("vink.kubevm.io.apis.management.resource.v1alpha1.WatchOptions", [
            { no: 1, name: "field_selector_group", kind: "message", T: () => FieldSelectorGroup }
        ]);
    }
    create(value?: PartialMessage<WatchOptions>): WatchOptions {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<WatchOptions>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WatchOptions): WatchOptions {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* vink.kubevm.io.apis.types.FieldSelectorGroup field_selector_group */ 1:
                    message.fieldSelectorGroup = FieldSelectorGroup.internalBinaryRead(reader, reader.uint32(), options, message.fieldSelectorGroup);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WatchOptions, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* vink.kubevm.io.apis.types.FieldSelectorGroup field_selector_group = 1; */
        if (message.fieldSelectorGroup)
            FieldSelectorGroup.internalBinaryWrite(message.fieldSelectorGroup, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.management.resource.v1alpha1.WatchOptions
 */
export const WatchOptions = new WatchOptions$Type();
/**
 * @generated ServiceType for protobuf service vink.kubevm.io.apis.management.resource.v1alpha1.ResourceWatchManagement
 */
export const ResourceWatchManagement = new ServiceType("vink.kubevm.io.apis.management.resource.v1alpha1.ResourceWatchManagement", [
    { name: "Watch", serverStreaming: true, options: {}, I: WatchRequest, O: WatchResponse }
]);
