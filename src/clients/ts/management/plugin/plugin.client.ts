// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "management/plugin/plugin.proto" (package "vink.kubevm.io.apis.management.plugin.v1alpha1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PluginManagement } from "./plugin";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "../../google/protobuf/empty";
import type { ManagePluginRequest } from "./plugin";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service vink.kubevm.io.apis.management.plugin.v1alpha1.PluginManagement
 */
export interface IPluginManagementClient {
    /**
     * @generated from protobuf rpc: ManagePlugin(vink.kubevm.io.apis.management.plugin.v1alpha1.ManagePluginRequest) returns (google.protobuf.Empty);
     */
    managePlugin(input: ManagePluginRequest, options?: RpcOptions): UnaryCall<ManagePluginRequest, Empty>;
}
/**
 * @generated from protobuf service vink.kubevm.io.apis.management.plugin.v1alpha1.PluginManagement
 */
export class PluginManagementClient implements IPluginManagementClient, ServiceInfo {
    typeName = PluginManagement.typeName;
    methods = PluginManagement.methods;
    options = PluginManagement.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ManagePlugin(vink.kubevm.io.apis.management.plugin.v1alpha1.ManagePluginRequest) returns (google.protobuf.Empty);
     */
    managePlugin(input: ManagePluginRequest, options?: RpcOptions): UnaryCall<ManagePluginRequest, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ManagePluginRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
