// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "management/plugin/plugin.proto" (package "vink.kubevm.io.apis.management.plugin.v1alpha1", syntax proto3)
// tslint:disable
import { Empty } from "../../google/protobuf/empty";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message vink.kubevm.io.apis.management.plugin.v1alpha1.ManagePluginRequest
 */
export interface ManagePluginRequest {
    /**
     * @generated from protobuf field: vink.kubevm.io.apis.management.plugin.v1alpha1.Plugin plugin = 1;
     */
    plugin: Plugin;
    /**
     * @generated from protobuf field: vink.kubevm.io.apis.management.plugin.v1alpha1.Action action = 2;
     */
    action: Action;
    /**
     * @generated from protobuf field: string values = 3;
     */
    values: string;
}
/**
 * @generated from protobuf enum vink.kubevm.io.apis.management.plugin.v1alpha1.Plugin
 */
export enum Plugin {
    /**
     * @generated from protobuf enum value: MULTUS = 0;
     */
    MULTUS = 0,
    /**
     * @generated from protobuf enum value: KUBE_OVN = 1;
     */
    KUBE_OVN = 1,
    /**
     * @generated from protobuf enum value: ROOK_CEPH = 2;
     */
    ROOK_CEPH = 2,
    /**
     * @generated from protobuf enum value: SNAPSHOTTER = 3;
     */
    SNAPSHOTTER = 3,
    /**
     * @generated from protobuf enum value: MONITOR = 4;
     */
    MONITOR = 4,
    /**
     * @generated from protobuf enum value: KUBEVIRT = 5;
     */
    KUBEVIRT = 5,
    /**
     * @generated from protobuf enum value: CDI = 6;
     */
    CDI = 6
}
/**
 * @generated from protobuf enum vink.kubevm.io.apis.management.plugin.v1alpha1.Action
 */
export enum Action {
    /**
     * @generated from protobuf enum value: INSTALL = 0;
     */
    INSTALL = 0,
    /**
     * @generated from protobuf enum value: UNINSTALL = 1;
     */
    UNINSTALL = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class ManagePluginRequest$Type extends MessageType<ManagePluginRequest> {
    constructor() {
        super("vink.kubevm.io.apis.management.plugin.v1alpha1.ManagePluginRequest", [
            { no: 1, name: "plugin", kind: "enum", T: () => ["vink.kubevm.io.apis.management.plugin.v1alpha1.Plugin", Plugin] },
            { no: 2, name: "action", kind: "enum", T: () => ["vink.kubevm.io.apis.management.plugin.v1alpha1.Action", Action] },
            { no: 3, name: "values", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ManagePluginRequest>): ManagePluginRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.plugin = 0;
        message.action = 0;
        message.values = "";
        if (value !== undefined)
            reflectionMergePartial<ManagePluginRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ManagePluginRequest): ManagePluginRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* vink.kubevm.io.apis.management.plugin.v1alpha1.Plugin plugin */ 1:
                    message.plugin = reader.int32();
                    break;
                case /* vink.kubevm.io.apis.management.plugin.v1alpha1.Action action */ 2:
                    message.action = reader.int32();
                    break;
                case /* string values */ 3:
                    message.values = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ManagePluginRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* vink.kubevm.io.apis.management.plugin.v1alpha1.Plugin plugin = 1; */
        if (message.plugin !== 0)
            writer.tag(1, WireType.Varint).int32(message.plugin);
        /* vink.kubevm.io.apis.management.plugin.v1alpha1.Action action = 2; */
        if (message.action !== 0)
            writer.tag(2, WireType.Varint).int32(message.action);
        /* string values = 3; */
        if (message.values !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.values);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message vink.kubevm.io.apis.management.plugin.v1alpha1.ManagePluginRequest
 */
export const ManagePluginRequest = new ManagePluginRequest$Type();
/**
 * @generated ServiceType for protobuf service vink.kubevm.io.apis.management.plugin.v1alpha1.PluginManagement
 */
export const PluginManagement = new ServiceType("vink.kubevm.io.apis.management.plugin.v1alpha1.PluginManagement", [
    { name: "ManagePlugin", options: {}, I: ManagePluginRequest, O: Empty }
]);
